/*
 * NewJPanel.java
 *
 * Created on 2008年8月5日, 下午1:57
 */
package com.mwq.print.mwing;

import java.awt.Component;
import java.awt.Dimension;
import java.util.Vector;
import javax.swing.JLabel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
/**
 *版权所有：明日科技有限公司
 * @author Administrator
 */
public class TablePanel extends javax.swing.JPanel {

    private static String tableTitle;// 表格标题
    private static Vector columnName;// 表格列名
    private static Vector tableData;// 表格数据
    private static int rowCount;// 表格行数
    private static int firstRow = 0;// 首行索引
    private static int lastRow = 0;// 尾行索引
    private static boolean hasContinueTable = false;// 默认为无续表
    private static int continueTableCount = 0;// 续表编号
    private MTable table;

    public TablePanel() {
        initComponents();
    }

    /** Creates new form NewJPanel */
    public TablePanel(Object[] tableInfo) {
        initComponents();
        tableTitle = tableInfo[0].toString();
        columnName = (Vector) tableInfo[1];
        tableData = (Vector) tableInfo[2];
        rowCount = tableData.size();
        firstRow = 0;
        lastRow = 0;
        continueTableCount = 0;
    }

    public boolean hasContinueTable() {
        return hasContinueTable;
    }

    public void continueTable(int height) {
        if (continueTableCount == 0) {// 主表

            continueTableCount++;
            titleLabel.setText(tableTitle);// 设置表格标题

        } else {// 续表

            titleLabel.setHorizontalAlignment(JLabel.RIGHT);
            titleLabel.setText("续表 " + continueTableCount++);// 设置续表序号

        }
        firstRow = lastRow;
        lastRow = firstRow + (height - titleLabel.getPreferredSize().height - 22 - 5) / 16;
        if (rowCount - lastRow > 1) {// 有剩余行

            hasContinueTable = true;// 有续表

        } else {// 无剩余行

            hasContinueTable = false;// 无续表

            lastRow = rowCount;
        }
        table = new MTable(columnName, new Vector(tableData.subList(firstRow, lastRow)));// 创建表格

        tableScrollPane.setViewportView(table);// 添加至滚动面板

        adjustColumnWidth();// 调整列宽等

    }

    private void adjustColumnWidth() {
        int tableWidth = 0;
        TableColumnModel columnModel = table.getColumnModel();// 获得表格模型对象
        JTableHeader tableHeader = table.getTableHeader();// 获得表格列头对象
        // 遍历列
        for (int col = 0; col < table.getColumnCount(); col++) {
            TableColumn column = columnModel.getColumn(col);// 获得指定列对象

            int columnWidth = tableHeader.getDefaultRenderer().getTableCellRendererComponent(
                    table, column.getIdentifier(), false, false, -1, col).getPreferredSize().width;// 获得列头的宽度

            // 遍历行
            for (int row = 0; row < table.getRowCount(); row++) {
                TableCellRenderer cellRenderer = table.getCellRenderer(row, col);// 获得指定单元格对象

                Object cellValue = table.getValueAt(row, col);// 获得单元格的值

                Component component = cellRenderer.getTableCellRendererComponent(
                        table, cellValue, false, false, row, col);
                columnWidth = Math.max(component.getPreferredSize().width, columnWidth);// 取最大的列宽

            }

            column.setPreferredWidth(columnWidth);// 设置列的首选宽度

            tableWidth += (columnWidth + 6);// 累加表格的宽度

        }

        int headerHeight = tableHeader.getPreferredSize().height;// 获得列头的高度

        int rowsHeigh = table.getRowHeight() * table.getRowCount();// 获得表格行的高度

        int tableHeight = headerHeight + rowsHeigh;// 计算表格的高度

        tableScrollPane.setPreferredSize(new Dimension(tableWidth, tableHeight));// 设置滚动面板的高度

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        tablePanel = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();
        tableScrollPane = new javax.swing.JScrollPane();

        setBackground(new java.awt.Color(255, 255, 255));

        tablePanel.setBackground(new java.awt.Color(255, 255, 255));
        tablePanel.setLayout(new java.awt.BorderLayout(5, 5));

        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("<表题>");
        tablePanel.add(titleLabel, java.awt.BorderLayout.PAGE_START);

        tableScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        tableScrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        tablePanel.add(tableScrollPane, java.awt.BorderLayout.CENTER);

        add(tablePanel);
    }// </editor-fold>                        
    // Variables declaration - do not modify                     
    private javax.swing.JPanel tablePanel;
    private javax.swing.JScrollPane tableScrollPane;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration                   
}
