/*
 * TablePanel.java
 *
 * Created on 2008年7月10日, 下午1:02
 */
package com.mwq.stat;

import java.awt.event.ItemEvent;
import java.io.File;

import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JViewport;
import javax.swing.filechooser.FileFilter;

import com.mwq.stat.dataform.DataForm;
import com.mwq.stat.frame.ChartDialog;
import com.mwq.stat.frame.UpdateHeadingDialog;
import com.mwq.stat.mwing.MTable;
import com.mwq.stat.tool.ExportTableToExcel;
import com.mwq.stat.tool.ExportTableToPDF;
import com.mwq.stat.tool.ScreenSize;
import com.mwq.stat.tool.Today;
import com.swtdesigner.SwingResourceManager;

/**
 * 版权所有：明日科技有限公司
 * @author Administrator
 */
public class StatTablePanel extends javax.swing.JPanel {

	private MTable fixedColumnTable;
	private JViewport fixedColumnTableViewport;

	/** Creates new form TablePanel */
	public StatTablePanel() {
		initComponents();
		dateLabel.setText("―― "+Today.getDate());
	}

	private File getSelectedFile(final String type) {
		String name = headingLabel.getText();
		if (name.equals("<主标题>")) {
			JOptionPane.showMessageDialog(null, "在保存之前请先修改表格名称！", "友情提示",
					JOptionPane.INFORMATION_MESSAGE);
			return null;
		}
		JFileChooser pathChooser = new JFileChooser();
		pathChooser.setFileFilter(new FileFilter() {

			@Override
			public boolean accept(File f) {
				if (f.isDirectory()) {
					return true;
				} else {
					if (f.getName().toLowerCase().endsWith(type)) {
						return true;
					} else {
						return false;
					}
				}
			}

			@Override
			public String getDescription() {
				return "文件格式（" + type + "）";
			}
		});
		pathChooser.setSelectedFile(new File(name + type));
		int showSaveDialog = pathChooser.showSaveDialog(this);
		if (showSaveDialog == JFileChooser.APPROVE_OPTION) {
			return pathChooser.getSelectedFile();
		} else {
			return null;
		}
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed"
	// desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		fixedColumnTableModel = new com.mwq.stat.mwing.FixedColumnTableModel();
		floatColumnTableModel = new com.mwq.stat.mwing.FloatColumnTableModel();
		tableToolBar = new javax.swing.JToolBar();
		excelButton = new javax.swing.JButton();
		excelButton.setText("生成Excel");
		excelButton.setPressedIcon(SwingResourceManager.getIcon(StatTablePanel.class, "img/excel_selected.png"));
		excelButton.setRolloverIcon(SwingResourceManager.getIcon(StatTablePanel.class, "img/excel_on.png"));
		excelButton.setToolTipText("利用表格生成Excel文件");
		excelButton.setIcon(SwingResourceManager.getIcon(StatTablePanel.class, "img/excel.png"));
		pdfButton = new javax.swing.JButton();
		pdfButton.setText(" 生成PDF ");
		pdfButton.setToolTipText("利用表格和统计图生成PDF文件");
		pdfButton.setRolloverIcon(SwingResourceManager.getIcon(StatTablePanel.class, "img/pdf_on.png"));
		pdfButton.setPressedIcon(SwingResourceManager.getIcon(StatTablePanel.class, "img/pdf_selected.png"));
		pdfButton.setIcon(SwingResourceManager.getIcon(StatTablePanel.class, "img/pdf.png"));
		headingButton = new javax.swing.JButton();
		headingButton.setText("修改表题");
		headingButton.setToolTipText("修改表格标题");
		headingButton.setRolloverIcon(SwingResourceManager.getIcon(StatTablePanel.class, "img/title_on.png"));
		headingButton.setPressedIcon(SwingResourceManager.getIcon(StatTablePanel.class, "img/title_selected.png"));
		headingButton.setIcon(SwingResourceManager.getIcon(StatTablePanel.class, "img/title.png"));
		columnComboBox = new javax.swing.JComboBox();
		tablePanel = new javax.swing.JPanel();
		headingPanel = new javax.swing.JPanel();
		headingLabel = new javax.swing.JLabel();
		subheadingLabel = new javax.swing.JLabel();
		dateLabel = new javax.swing.JLabel();
		tableScrollPane = new javax.swing.JScrollPane();
		floatColumnTable = new com.mwq.stat.mwing.MTable();

		setLayout(new java.awt.BorderLayout());

		tableToolBar.setFloatable(false);
		tableToolBar.setRollover(true);

		excelButton.setFocusable(false);
		excelButton
				.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		excelButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
		excelButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				excelButtonActionPerformed(evt);
			}
		});
		tableToolBar.add(excelButton);

		pdfButton.setFocusable(false);
		pdfButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		pdfButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
		pdfButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				pdfButtonActionPerformed(evt);
			}
		});
		tableToolBar.add(pdfButton);
		
		tableToolBar.add( new javax.swing.JToolBar.Separator());

		headingButton.setFocusable(false);
		headingButton
				.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		headingButton
				.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
		headingButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				headingButtonActionPerformed(evt);
			}
		});
		tableToolBar.add(headingButton);
		
		tableToolBar.add( new javax.swing.JToolBar.Separator());

		String[] columnComboBoxItems = new String[fixedColumnTableModel
				.getColumnCount()
				+ floatColumnTableModel.getColumnCount() + 1];
		for (int column = 0; column < columnComboBoxItems.length; column++) {
			columnComboBoxItems[column] = column + "";
		}
		columnComboBoxItems[1] = "<固定列数量>";
		columnComboBox.setModel(new javax.swing.DefaultComboBoxModel(
				columnComboBoxItems));
		columnComboBox.setSelectedItem("<固定列数量>");
		columnComboBox.setMaximumSize(new java.awt.Dimension(100, 30));
		columnComboBox.addItemListener(new java.awt.event.ItemListener() {
			public void itemStateChanged(java.awt.event.ItemEvent evt) {
				columnComboBoxItemStateChanged(evt);
			}
		});
		tableToolBar.add(columnComboBox);

		add(tableToolBar, java.awt.BorderLayout.PAGE_START);

		tablePanel.setLayout(new java.awt.BorderLayout());

		headingPanel.setLayout(new java.awt.BorderLayout());

		headingLabel.setFont(new java.awt.Font("宋体", 1, 18));
		headingLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		headingLabel.setText("<主标题>");
		headingLabel.setBorder(javax.swing.BorderFactory.createEmptyBorder(6,
				1, 1, 1));
		headingPanel.add(headingLabel, java.awt.BorderLayout.PAGE_START);

		subheadingLabel.setFont(new java.awt.Font("宋体", 0, 14));
		subheadingLabel
				.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		subheadingLabel.setText("<副标题>");
		subheadingLabel.setBorder(javax.swing.BorderFactory.createEmptyBorder(
				3, 1, 3, 1));
		headingPanel.add(subheadingLabel, java.awt.BorderLayout.CENTER);

		dateLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
		dateLabel.setText("――  2008年8月8日    ");
		dateLabel.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1,
				1, 1));
		headingPanel.add(dateLabel, java.awt.BorderLayout.PAGE_END);

		tablePanel.add(headingPanel, java.awt.BorderLayout.PAGE_START);

		floatColumnTable.setModel(floatColumnTableModel);
		tableScrollPane.setViewportView(floatColumnTable);

		tablePanel.add(tableScrollPane, java.awt.BorderLayout.CENTER);
		fixedColumnTable = new MTable();

		fixedColumnTable.setModel(fixedColumnTableModel);

		tableScrollPane.setCorner(JScrollPane.UPPER_LEFT_CORNER,
				fixedColumnTable.getTableHeader()); // 将固定列表格头放到滚动面版的左上方

		fixedColumnTableViewport = new JViewport();// 创建一个用来显示基础信息的视口对象

		fixedColumnTableViewport.setView(fixedColumnTable);// 将固定列表格添加到视口中

		fixedColumnTableViewport.setPreferredSize(fixedColumnTable
				.getPreferredSize());// 设置视口的首选大小为固定列表格的首选大小

		tableScrollPane.setRowHeaderView(fixedColumnTableViewport);// 将视口添加到滚动面版的标题视口中

		add(tablePanel, java.awt.BorderLayout.CENTER);
	}// </editor-fold>//GEN-END:initComponents

	private void excelButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN
																				// -
																				// FIRST
																				// :
																				// event_excelButtonActionPerformed
	// TODO add your handling code here:
		File selectedFile = getSelectedFile(".xls");
		if (selectedFile != null) {
			new ExportTableToExcel(selectedFile, headingLabel.getText(),
					subheadingLabel.getText(), dateLabel.getText());
		}
	}// GEN-LAST:event_excelButtonActionPerformed

	private void pdfButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-
																			// FIRST
																			// :
																			// event_pdfButtonActionPerformed
	// TODO add your handling code here:
		File selectedFile = getSelectedFile(".pdf");
		if (selectedFile != null) {
			ChartDialog chartDialog = new ChartDialog(null, true);
			ScreenSize.centered(chartDialog);
			chartDialog.setVisible(true);
			new ExportTableToPDF(selectedFile, headingLabel.getText(),
					subheadingLabel.getText(), dateLabel.getText(), chartDialog);
		}
	}// GEN-LAST:event_pdfButtonActionPerformed

	private void headingButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN
																				// -
																				// FIRST
																				// :
																				// event_headingButtonActionPerformed
	// TODO add your handling code here:
		new UpdateHeadingDialog(null, true, headingLabel, subheadingLabel)
				.setVisible(true);
	}// GEN-LAST:event_headingButtonActionPerformed

	private void columnComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {// GEN
																				// -
																				// FIRST
																				// :
																				// event_columnComboBoxItemStateChanged
	// TODO add your handling code here:
		if (evt.getStateChange() == ItemEvent.SELECTED) {
			DataForm.setFixedColumnAmount(columnComboBox.getSelectedIndex());
			fixedColumnTable.createDefaultColumnsFromModel();
			floatColumnTable.createDefaultColumnsFromModel();
			fixedColumnTableViewport.setPreferredSize(fixedColumnTable
					.getPreferredSize());
		}
	}// GEN-LAST:event_columnComboBoxItemStateChanged

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JComboBox columnComboBox;
	private javax.swing.JLabel dateLabel;
	private javax.swing.JButton excelButton;
	private com.mwq.stat.mwing.FixedColumnTableModel fixedColumnTableModel;
	private javax.swing.JTable floatColumnTable;
	private com.mwq.stat.mwing.FloatColumnTableModel floatColumnTableModel;
	private javax.swing.JButton headingButton;
	private javax.swing.JLabel headingLabel;
	private javax.swing.JPanel headingPanel;
	private javax.swing.JButton pdfButton;
	private javax.swing.JLabel subheadingLabel;
	private javax.swing.JPanel tablePanel;
	private javax.swing.JScrollPane tableScrollPane;
	private javax.swing.JToolBar tableToolBar;
	// End of variables declaration//GEN-END:variables
}
